name: Deploy to DigitalOcean Functions

# on:
#   push:
#     branches:
#       - main

on:
  workflow_dispatch

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Configure Cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Generate .env file
        run: |
          cat <<EOF > .env
            GH_GITHUB_APP_ID=${{ vars.GH_GITHUB_APP_ID }}
            GH_GITHUB_ORG=${{ vars.GH_GITHUB_ORG }}
            GH_GITHUB_APP_PRIVATE_KEY_BASE64=${{ vars.GH_GITHUB_APP_PRIVATE_KEY_BASE64 }}
            GH_GITHUB_WEBHOOK_SECRET_HMAC=${{ vars.GH_GITHUB_WEBHOOK_SECRET_HMAC }}
            GH_GITHUB_USERNAME=${{ vars.GH_GITHUB_USERNAME }}
            GH_GITHUB_REPO_NAME=${{ vars.GH_GITHUB_REPO_NAME }}
            GH_GITHUB_APP_NAME=${{ vars.GH_GITHUB_APP_NAME }}
            DO_SERVERLESS_NAMESPACE_ID=${{ vars.DO_SERVERLESS_NAMESPACE_ID }}
            DOCTL_API_TOKEN=${{ vars.DOCTL_API_TOKEN }}
            S3_ACCESS_KEY=${{ vars.S3_ACCESS_KEY }}
            S3_SECRET_KEY=${{ vars.S3_SECRET_KEY }}
            S3_BUCKET=${{ vars.S3_BUCKET }}
            S3_REGION=${{ vars.S3_REGION }}
            S3_ENDPOINT=${{ vars.S3_ENDPOINT }}
            SLACK_WEBHOOK_URL=${{ vars.SLACK_WEBHOOK_URL }}
          EOF

      - run: npm install

      - run: npm run build-ncc

      - name: Authenticate with doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ vars.DOCTL_API_TOKEN }}

      - name: Show doctl version
        run: doctl version

      - name: Install Serverless CLI
        run: doctl serverless install

      - name: Connect to namespace
        run: doctl serverless connect ${{ vars.DO_SERVERLESS_NAMESPACE_ID }}

      - name: Deploy to Functions
        run: doctl serverless deploy . 

